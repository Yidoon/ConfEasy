name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Package application
        run: npm run make

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: out/make/zip/darwin/x64/*.zip

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: out/make/squirrel.windows/x64/*.exe

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            out/make/deb/x64/*.deb
            out/make/rpm/x64/*.rpm

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: ./artifacts/macos/

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./artifacts/windows/

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: ./artifacts/linux/

      - name: Get tag name
        id: tag
        run: echo "name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ConfEasy ${{ steps.tag.outputs.name }}
          body: |
            ## ConfEasy ${{ steps.tag.outputs.name }}
            
            ### 🎉 新版本发布
            
            **下载适合你操作系统的版本:**
            
            - 🍎 **macOS**: 下载 `.zip` 文件，解压后拖拽到应用程序文件夹
            - 🪟 **Windows**: 下载 `.exe` 文件并运行安装
            - 🐧 **Linux**: 
              - Ubuntu/Debian 系统下载 `.deb` 文件
              - CentOS/RHEL 系统下载 `.rpm` 文件
            
            ### ✨ 主要功能
            - 管理和编辑配置文件
            - 支持语法高亮
            - 标签系统组织文件
            - 跨平台支持
            
            ### 🔧 安装说明
            1. 从下方资源列表下载对应平台的安装包
            2. 按照操作系统的标准方式安装
            3. 首次运行时可能需要授权运行未签名应用
            
            ---
            
            🤖 此版本由 [Claude Code](https://claude.ai/code) 自动构建发布
          files: |
            artifacts/macos/*.zip
            artifacts/windows/*.exe
            artifacts/linux/*.deb
            artifacts/linux/*.rpm
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}