"use strict";
const electron = require("electron");
electron.contextBridge.exposeInMainWorld("electronAPI", {
  getConfigFiles: () => electron.ipcRenderer.invoke("get-config-files"),
  readFile: (filePath) => electron.ipcRenderer.invoke("read-file", filePath),
  writeFile: (filePath, content) => electron.ipcRenderer.invoke("write-file", filePath, content),
  selectFile: () => electron.ipcRenderer.invoke("select-file"),
  selectFolder: () => electron.ipcRenderer.invoke("select-folder"),
  scanFolder: (folderPath) => electron.ipcRenderer.invoke("scan-folder", folderPath),
  showItemInFolder: (filePath) => electron.ipcRenderer.invoke("show-item-in-folder", filePath),
  addFileByPath: (filePath) => electron.ipcRenderer.invoke("add-file-by-path", filePath),
  getPlatform: () => electron.ipcRenderer.invoke("get-platform"),
  checkPath: (inputPath) => electron.ipcRenderer.invoke("check-path", inputPath),
  scanFolderTree: (folderPath, maxDepth) => electron.ipcRenderer.invoke("scan-folder-tree", folderPath, maxDepth),
  getFolderContents: (folderPath) => electron.ipcRenderer.invoke("get-folder-contents", folderPath)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlbG9hZC5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL3ByZWxvYWQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29udGV4dEJyaWRnZSwgaXBjUmVuZGVyZXIgfSBmcm9tIFwiZWxlY3Ryb25cIlxuXG5leHBvcnQgaW50ZXJmYWNlIENvbmZpZ0ZpbGUge1xuICBuYW1lOiBzdHJpbmdcbiAgcGF0aDogc3RyaW5nXG4gIGV4aXN0czogYm9vbGVhblxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZpbGVSZXN1bHQge1xuICBzdWNjZXNzOiBib29sZWFuXG4gIGNvbnRlbnQ/OiBzdHJpbmdcbiAgZXJyb3I/OiBzdHJpbmdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGaWxlU3lzdGVtSXRlbSB7XG4gIG5hbWU6IHN0cmluZ1xuICBwYXRoOiBzdHJpbmdcbiAgdHlwZTogJ2ZpbGUnIHwgJ2ZvbGRlcidcbiAgZXhpc3RzOiBib29sZWFuXG4gIHRhZ3M/OiBzdHJpbmdbXVxuICBjaGlsZHJlbj86IEZpbGVTeXN0ZW1JdGVtW11cbiAgZXhwYW5kZWQ/OiBib29sZWFuXG4gIGlzTG9hZGluZz86IGJvb2xlYW5cbn1cblxuZXhwb3J0IGludGVyZmFjZSBGb2xkZXJUcmVlUmVzdWx0IHtcbiAgc3VjY2VzczogYm9vbGVhblxuICBpdGVtczogRmlsZVN5c3RlbUl0ZW1bXVxuICBlcnJvcj86IHN0cmluZ1xufVxuXG4vLyBFeHBvc2UgcHJvdGVjdGVkIG1ldGhvZHMgdGhhdCBhbGxvdyB0aGUgcmVuZGVyZXIgcHJvY2VzcyB0byB1c2Vcbi8vIHRoZSBpcGNSZW5kZXJlciB3aXRob3V0IGV4cG9zaW5nIHRoZSBlbnRpcmUgb2JqZWN0XG5jb250ZXh0QnJpZGdlLmV4cG9zZUluTWFpbldvcmxkKFwiZWxlY3Ryb25BUElcIiwge1xuICBnZXRDb25maWdGaWxlczogKCk6IFByb21pc2U8Q29uZmlnRmlsZVtdPiA9PlxuICAgIGlwY1JlbmRlcmVyLmludm9rZShcImdldC1jb25maWctZmlsZXNcIiksXG4gIHJlYWRGaWxlOiAoZmlsZVBhdGg6IHN0cmluZyk6IFByb21pc2U8RmlsZVJlc3VsdD4gPT5cbiAgICBpcGNSZW5kZXJlci5pbnZva2UoXCJyZWFkLWZpbGVcIiwgZmlsZVBhdGgpLFxuICB3cml0ZUZpbGU6IChmaWxlUGF0aDogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcpOiBQcm9taXNlPEZpbGVSZXN1bHQ+ID0+XG4gICAgaXBjUmVuZGVyZXIuaW52b2tlKFwid3JpdGUtZmlsZVwiLCBmaWxlUGF0aCwgY29udGVudCksXG4gIHNlbGVjdEZpbGU6ICgpOiBQcm9taXNlPHN0cmluZyB8IG51bGw+ID0+IGlwY1JlbmRlcmVyLmludm9rZShcInNlbGVjdC1maWxlXCIpLFxuICBzZWxlY3RGb2xkZXI6ICgpOiBQcm9taXNlPHN0cmluZyB8IG51bGw+ID0+XG4gICAgaXBjUmVuZGVyZXIuaW52b2tlKFwic2VsZWN0LWZvbGRlclwiKSxcbiAgc2NhbkZvbGRlcjogKFxuICAgIGZvbGRlclBhdGg6IHN0cmluZ1xuICApOiBQcm9taXNlPHtcbiAgICBzdWNjZXNzOiBib29sZWFuXG4gICAgZmlsZXM6IEFycmF5PHsgbmFtZTogc3RyaW5nOyBwYXRoOiBzdHJpbmc7IGV4aXN0czogYm9vbGVhbiB9PlxuICAgIGVycm9yPzogc3RyaW5nXG4gIH0+ID0+IGlwY1JlbmRlcmVyLmludm9rZShcInNjYW4tZm9sZGVyXCIsIGZvbGRlclBhdGgpLFxuICBzaG93SXRlbUluRm9sZGVyOiAoZmlsZVBhdGg6IHN0cmluZyk6IFByb21pc2U8dm9pZD4gPT5cbiAgICBpcGNSZW5kZXJlci5pbnZva2UoXCJzaG93LWl0ZW0taW4tZm9sZGVyXCIsIGZpbGVQYXRoKSxcbiAgYWRkRmlsZUJ5UGF0aDogKFxuICAgIGZpbGVQYXRoOiBzdHJpbmdcbiAgKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW47IGV4aXN0czogYm9vbGVhbjsgYWN0dWFsUGF0aD86IHN0cmluZyB9PiA9PlxuICAgIGlwY1JlbmRlcmVyLmludm9rZShcImFkZC1maWxlLWJ5LXBhdGhcIiwgZmlsZVBhdGgpLFxuICBnZXRQbGF0Zm9ybTogKCk6IFByb21pc2U8c3RyaW5nPiA9PiBpcGNSZW5kZXJlci5pbnZva2UoXCJnZXQtcGxhdGZvcm1cIiksXG4gIGNoZWNrUGF0aDogKFxuICAgIGlucHV0UGF0aDogc3RyaW5nXG4gICk6IFByb21pc2U8e1xuICAgIHN1Y2Nlc3M6IGJvb2xlYW5cbiAgICBleGlzdHM6IGJvb2xlYW5cbiAgICBhY3R1YWxQYXRoOiBzdHJpbmdcbiAgICBpc0ZpbGU6IGJvb2xlYW5cbiAgICBpc0RpcmVjdG9yeTogYm9vbGVhblxuICB9PiA9PiBpcGNSZW5kZXJlci5pbnZva2UoXCJjaGVjay1wYXRoXCIsIGlucHV0UGF0aCksXG4gIHNjYW5Gb2xkZXJUcmVlOiAoXG4gICAgZm9sZGVyUGF0aDogc3RyaW5nLFxuICAgIG1heERlcHRoPzogbnVtYmVyXG4gICk6IFByb21pc2U8Rm9sZGVyVHJlZVJlc3VsdD4gPT4gaXBjUmVuZGVyZXIuaW52b2tlKFwic2Nhbi1mb2xkZXItdHJlZVwiLCBmb2xkZXJQYXRoLCBtYXhEZXB0aCksXG4gIGdldEZvbGRlckNvbnRlbnRzOiAoXG4gICAgZm9sZGVyUGF0aDogc3RyaW5nXG4gICk6IFByb21pc2U8Rm9sZGVyVHJlZVJlc3VsdD4gPT4gaXBjUmVuZGVyZXIuaW52b2tlKFwiZ2V0LWZvbGRlci1jb250ZW50c1wiLCBmb2xkZXJQYXRoKSxcbn0pXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgaW50ZXJmYWNlIFdpbmRvdyB7XG4gICAgZWxlY3Ryb25BUEk6IHtcbiAgICAgIGdldENvbmZpZ0ZpbGVzOiAoKSA9PiBQcm9taXNlPENvbmZpZ0ZpbGVbXT5cbiAgICAgIHJlYWRGaWxlOiAoZmlsZVBhdGg6IHN0cmluZykgPT4gUHJvbWlzZTxGaWxlUmVzdWx0PlxuICAgICAgd3JpdGVGaWxlOiAoZmlsZVBhdGg6IHN0cmluZywgY29udGVudDogc3RyaW5nKSA9PiBQcm9taXNlPEZpbGVSZXN1bHQ+XG4gICAgICBzZWxlY3RGaWxlOiAoKSA9PiBQcm9taXNlPHN0cmluZyB8IG51bGw+XG4gICAgICBzZWxlY3RGb2xkZXI6ICgpID0+IFByb21pc2U8c3RyaW5nIHwgbnVsbD5cbiAgICAgIHNjYW5Gb2xkZXI6IChmb2xkZXJQYXRoOiBzdHJpbmcpID0+IFByb21pc2U8e1xuICAgICAgICBzdWNjZXNzOiBib29sZWFuXG4gICAgICAgIGZpbGVzOiBBcnJheTx7IG5hbWU6IHN0cmluZzsgcGF0aDogc3RyaW5nOyBleGlzdHM6IGJvb2xlYW4gfT5cbiAgICAgICAgZXJyb3I/OiBzdHJpbmdcbiAgICAgIH0+XG4gICAgICBzaG93SXRlbUluRm9sZGVyOiAoZmlsZVBhdGg6IHN0cmluZykgPT4gUHJvbWlzZTx2b2lkPlxuICAgICAgYWRkRmlsZUJ5UGF0aDogKFxuICAgICAgICBmaWxlUGF0aDogc3RyaW5nXG4gICAgICApID0+IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBleGlzdHM6IGJvb2xlYW47IGFjdHVhbFBhdGg/OiBzdHJpbmcgfT5cbiAgICAgIGdldFBsYXRmb3JtOiAoKSA9PiBQcm9taXNlPHN0cmluZz5cbiAgICAgIGNoZWNrUGF0aDogKGlucHV0UGF0aDogc3RyaW5nKSA9PiBQcm9taXNlPHtcbiAgICAgICAgc3VjY2VzczogYm9vbGVhblxuICAgICAgICBleGlzdHM6IGJvb2xlYW5cbiAgICAgICAgYWN0dWFsUGF0aDogc3RyaW5nXG4gICAgICAgIGlzRmlsZTogYm9vbGVhblxuICAgICAgICBpc0RpcmVjdG9yeTogYm9vbGVhblxuICAgICAgfT5cbiAgICAgIHNjYW5Gb2xkZXJUcmVlOiAoZm9sZGVyUGF0aDogc3RyaW5nLCBtYXhEZXB0aD86IG51bWJlcikgPT4gUHJvbWlzZTxGb2xkZXJUcmVlUmVzdWx0PlxuICAgICAgZ2V0Rm9sZGVyQ29udGVudHM6IChmb2xkZXJQYXRoOiBzdHJpbmcpID0+IFByb21pc2U8Rm9sZGVyVHJlZVJlc3VsdD5cbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJjb250ZXh0QnJpZGdlIiwiaXBjUmVuZGVyZXIiXSwibWFwcGluZ3MiOiI7O0FBaUNBQSxTQUFBQSxjQUFjLGtCQUFrQixlQUFlO0FBQUEsRUFDN0MsZ0JBQWdCLE1BQ2RDLFNBQUFBLFlBQVksT0FBTyxrQkFBa0I7QUFBQSxFQUN2QyxVQUFVLENBQUMsYUFDVEEsU0FBQUEsWUFBWSxPQUFPLGFBQWEsUUFBUTtBQUFBLEVBQzFDLFdBQVcsQ0FBQyxVQUFrQixZQUM1QkEsU0FBQUEsWUFBWSxPQUFPLGNBQWMsVUFBVSxPQUFPO0FBQUEsRUFDcEQsWUFBWSxNQUE4QkEsU0FBQUEsWUFBWSxPQUFPLGFBQWE7QUFBQSxFQUMxRSxjQUFjLE1BQ1pBLFNBQUFBLFlBQVksT0FBTyxlQUFlO0FBQUEsRUFDcEMsWUFBWSxDQUNWLGVBS0lBLFNBQUFBLFlBQVksT0FBTyxlQUFlLFVBQVU7QUFBQSxFQUNsRCxrQkFBa0IsQ0FBQyxhQUNqQkEsU0FBQUEsWUFBWSxPQUFPLHVCQUF1QixRQUFRO0FBQUEsRUFDcEQsZUFBZSxDQUNiLGFBRUFBLFNBQUFBLFlBQVksT0FBTyxvQkFBb0IsUUFBUTtBQUFBLEVBQ2pELGFBQWEsTUFBdUJBLFNBQUFBLFlBQVksT0FBTyxjQUFjO0FBQUEsRUFDckUsV0FBVyxDQUNULGNBT0lBLFNBQUFBLFlBQVksT0FBTyxjQUFjLFNBQVM7QUFBQSxFQUNoRCxnQkFBZ0IsQ0FDZCxZQUNBLGFBQzhCQSxTQUFBQSxZQUFZLE9BQU8sb0JBQW9CLFlBQVksUUFBUTtBQUFBLEVBQzNGLG1CQUFtQixDQUNqQixlQUM4QkEsU0FBQUEsWUFBWSxPQUFPLHVCQUF1QixVQUFVO0FBQ3RGLENBQUM7In0=
